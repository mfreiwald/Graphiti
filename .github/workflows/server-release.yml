name: Release REST Server

on:
  push:
    tags:
      - 'server/v*.*.*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 1.0.0)'
        required: true
        type: string

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}/graphiti-server

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from tag
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            VERSION="${{ inputs.version }}"
          else
            VERSION="${GITHUB_REF#refs/tags/server/v}"
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "tag=server/v$VERSION" >> $GITHUB_OUTPUT

      - name: Update pyproject.toml version
        run: |
          cd graphiti-server
          sed -i 's/^version = .*/version = "${{ steps.version.outputs.version }}"/' pyproject.toml
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pyproject.toml
          git diff --staged --quiet || git commit -m "chore: bump server version to ${{ steps.version.outputs.version }}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=semver,pattern={{version}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}},value=${{ steps.version.outputs.version }}
            type=raw,value=latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./graphiti-server
          file: ./graphiti-server/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: REST Server v${{ steps.version.outputs.version }}
          body: |
            ## Graphiti REST Server v${{ steps.version.outputs.version }}

            ### Docker Image
            ```bash
            docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
            ```

            ### Quick Start
            ```bash
            docker run -p 8000:8000 \
              -e OPENAI_API_KEY=your-key \
              -e NEO4J_URI=bolt://neo4j:7687 \
              ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}
            ```

            ### Changes
            See [graphiti-server/README.md](./graphiti-server/README.md) for documentation.
          draft: false
          prerelease: false
